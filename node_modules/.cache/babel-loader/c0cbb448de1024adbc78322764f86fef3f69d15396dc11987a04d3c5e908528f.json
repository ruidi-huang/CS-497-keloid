{"ast":null,"code":"var _jsxFileName = \"/Users/reed/keloid/CS-497-keloid/src/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './ImageUploader.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://acbb-35-237-172-233.ngrok-free.app/\";\nfunction ImageUploader() {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false); // New state to track if image is loaded\n  const [coordinates, setCoordinates] = useState([]);\n  const [imageFile, setImageFile] = useState(null); // New state to store the image file\n  const canvasRef = useRef(null);\n  const imageLoaderRef = useRef(null);\n  const imgRef = useRef(null); // Ref to store the loaded image element\n  const [rect, setRect] = useState({});\n  const [drag, setDrag] = useState(false);\n  const [mode, setMode] = useState(\"draw\"); // Default mode is \"draw\"\n\n  const handleImage = e => {\n    const reader = new FileReader();\n    setImageFile(e.target.files[0]); // Store the image file in state\n    reader.onload = event => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        console.log('Image loaded:', img.width, img.height);\n        // Use a fixed width for the canvas\n        // const scaleFactor = 700 / img.width;\n        // const scaledHeight = img.height * scaleFactor;\n        // const scaleFactor = 700 / img.width;\n        const scaledHeight = img.height;\n\n        // Set canvas size\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, scaledHeight);\n        imgRef.current = img;\n        setImageLoaded(true); // Indicate that the image is now loaded\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  const handleUploadImage = async event => {\n    // const canvas = canvasRef.current;\n    // const imageData = canvas.toDataURL('image/jpeg'); // Convert canvas to base64 data URL\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', imageFile);\n    console.log('Image data:', formData);\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + pair[1]);\n    }\n\n    // You can now send the imageData to your backend using Axios or any other HTTP library\n    axios.post(`${baseURL}upload/`, formData).then(response => {\n      console.log('Image uploaded successfully:', response.data);\n\n      // const imageUrl = URL.createObjectURL(blob);\n\n      // Now you can use the imageUrl to display the image in your React component\n      // For example, you can set it as the src attribute of an <img> element\n      // document.getElementById('imageElement').src = imageUrl\n      // Optionally, handle success response\n    }).catch(error => {\n      console.error('Error uploading image:', error);\n      // Optionally, handle error\n    });\n  };\n  const handleCoin = async event => {\n    event.preventDefault();\n    const rectangleData = {\n      x: coordinates[0].startX,\n      y: coordinates[0].startY,\n      width: coordinates[0].w,\n      height: coordinates[0].h\n    };\n    console.log('Rectangle data:', rectangleData);\n    axios.post(`${baseURL}uploadCoin/`, rectangleData).then(response => {\n      console.log('Image uploaded successfully:', response.data);\n      const blob = new Blob([response.data], {\n        type: 'image/jpg'\n      });\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Use a fixed width for the canvas\n      const scaleFactor = 700 / blob.width;\n      const scaledHeight = blob.height * scaleFactor;\n\n      // Set canvas size\n      canvas.width = 700;\n      canvas.height = scaledHeight;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(blob, 0, 0, canvas.width, scaledHeight);\n      imgRef.current = blob;\n      setImageLoaded(true); // Indicate that the image is now loaded\n      // Create a URL for the blob\n      // Optionally, handle success response\n    }).catch(error => {\n      console.error('Error uploading image:', error);\n      // Optionally, handle error\n    });\n  };\n  const handleRemoveImage = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setImageLoaded(false);\n    setCoordinates([]);\n    setRect({});\n    setDrag(false);\n    if (imageLoaderRef.current) {\n      imageLoaderRef.current.value = null;\n    }\n  };\n  const initDraw = event => {\n    if (!imageLoaded) return;\n    const x = event.nativeEvent.offsetX;\n    const y = event.nativeEvent.offsetY;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (mode === \"draw\") {\n      setRect({\n        startX: x,\n        startY: y,\n        w: 0,\n        h: 0\n      });\n      setDrag(true);\n    } else if (mode === \"point\") {\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n      ctx.arc(x, y, 5, 0, Math.PI * 2, true); // Draw a circle\n      ctx.fill();\n      setCoordinates([...coordinates, {\n        startX: x,\n        startY: y,\n        w: 0,\n        h: 0\n      }]);\n    }\n  };\n  const draw = event => {\n    if (!imageLoaded || !drag || mode !== \"draw\") return;\n    const mouseX = event.nativeEvent.offsetX;\n    const mouseY = event.nativeEvent.offsetY;\n    const width = mouseX - rect.startX;\n    const height = mouseY - rect.startY;\n    setRect({\n      ...rect,\n      w: width,\n      h: height\n    });\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'red';\n    ctx.strokeRect(rect.startX, rect.startY, width, height);\n    redraw(ctx); // Redraw the rectangles after drawing the current rectangle\n  };\n  const finishDraw = () => {\n    if (!imageLoaded || mode === \"point\") return; // Skip if in point mode\n    setDrag(false);\n    setCoordinates([...coordinates, rect]);\n  };\n  const redraw = ctx => {\n    coordinates.forEach(coord => {\n      if (coord.w === 0 && coord.h === 0) {\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(coord.startX, coord.startY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      } else {\n        ctx.strokeStyle = 'red';\n        ctx.strokeRect(coord.startX, coord.startY, coord.w, coord.h);\n      }\n    });\n  };\n  const undoLastAction = () => {\n    setCoordinates(prevCoordinates => {\n      const newCoordinates = prevCoordinates.slice(0, -1);\n\n      // Redraw the canvas\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n\n      // Redraw all the elements except the last one\n      newCoordinates.forEach(coord => {\n        if (coord.w === 0 && coord.h === 0) {\n          ctx.fillStyle = 'red';\n          ctx.beginPath();\n          ctx.arc(coord.startX, coord.startY, 5, 0, Math.PI * 2);\n          ctx.fill();\n        } else {\n          ctx.strokeStyle = 'red';\n          ctx.strokeRect(coord.startX, coord.startY, coord.w, coord.h);\n        }\n      });\n      return newCoordinates;\n    });\n  };\n  const toggleMode = () => {\n    setMode(prevMode => prevMode === \"draw\" ? \"point\" : \"draw\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keloid-detector-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Mode: \", mode === \"draw\" ? \"Drawing Rectangles\" : \"Selecting Points\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: imageLoaderRef,\n      onChange: handleImage,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: initDraw,\n      onMouseMove: draw,\n      onMouseUp: finishDraw,\n      className: \"image-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadImage,\n          className: \"remove-image-btn\",\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCoin,\n          className: \"remove-image-btn\",\n          children: \"Confirm Coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveImage,\n          className: \"remove-image-btn\",\n          children: \"Remove Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-coordinates-btn\",\n          onClick: () => alert(JSON.stringify(coordinates)),\n          children: \"Print Coord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"undo-rectangle-btn\",\n          onClick: undoLastAction,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMode,\n          className: \"toggle-mode-btn\",\n          children: mode === \"draw\" ? \"Point Mode\" : \"Draw Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadImage,\n          className: \"remove-image-btn\",\n          children: \"Confrim Lesion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadImage,\n          className: \"remove-image-btn\",\n          children: \"Print Patch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coordinates-display\",\n      children: [\"Coordinates: \", coordinates.map((coord, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coordinate-item\",\n        children: [\"Start (\", coord.startX, \", \", coord.startY, \"), End (\", coord.startX + coord.w, \", \", coord.startY + coord.h, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"1tJHF8RxnFZf2k9K5H9xNol06KA=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","baseURL","ImageUploader","_s","imageLoaded","setImageLoaded","coordinates","setCoordinates","imageFile","setImageFile","canvasRef","imageLoaderRef","imgRef","rect","setRect","drag","setDrag","mode","setMode","handleImage","e","reader","FileReader","target","files","onload","event","img","Image","canvas","current","ctx","getContext","console","log","width","height","scaledHeight","clearRect","drawImage","src","result","readAsDataURL","handleUploadImage","preventDefault","formData","FormData","append","pair","entries","post","then","response","data","catch","error","handleCoin","rectangleData","x","startX","y","startY","w","h","blob","Blob","type","scaleFactor","handleRemoveImage","value","initDraw","nativeEvent","offsetX","offsetY","fillStyle","beginPath","arc","Math","PI","fill","draw","mouseX","mouseY","strokeStyle","strokeRect","redraw","finishDraw","forEach","coord","undoLastAction","prevCoordinates","newCoordinates","slice","toggleMode","prevMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","onMouseDown","onMouseMove","onMouseUp","onClick","alert","JSON","stringify","map","index","_c","$RefreshReg$"],"sources":["/Users/reed/keloid/CS-497-keloid/src/ImageUploader.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './ImageUploader.css';\nimport axios from 'axios';\n\nconst baseURL = \"https://acbb-35-237-172-233.ngrok-free.app/\";\n\nfunction ImageUploader() {\n  const [imageLoaded, setImageLoaded] = useState(false); // New state to track if image is loaded\n  const [coordinates, setCoordinates] = useState([]);\n  const [imageFile, setImageFile] = useState(null); // New state to store the image file\n  const canvasRef = useRef(null);\n  const imageLoaderRef = useRef(null);\n  const imgRef = useRef(null); // Ref to store the loaded image element\n  const [rect, setRect] = useState({});\n  const [drag, setDrag] = useState(false);\n  const [mode, setMode] = useState(\"draw\"); // Default mode is \"draw\"\n\n  const handleImage = (e) => {\n    const reader = new FileReader();\n    setImageFile(e.target.files[0]); // Store the image file in state\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        console.log('Image loaded:', img.width, img.height)\n        // Use a fixed width for the canvas\n        // const scaleFactor = 700 / img.width;\n        // const scaledHeight = img.height * scaleFactor;\n        // const scaleFactor = 700 / img.width;\n        const scaledHeight = img.height;\n        \n        // Set canvas size\n        canvas.width = img.width; \n        canvas.height = img.height;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, scaledHeight);\n        imgRef.current = img;\n        setImageLoaded(true); // Indicate that the image is now loaded\n      };\n      img.src = event.target.result;\n    };\n    \n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const handleUploadImage = async (event) => {\n    // const canvas = canvasRef.current;\n  // const imageData = canvas.toDataURL('image/jpeg'); // Convert canvas to base64 data URL\n  event.preventDefault();\n  const formData = new FormData();\n  formData.append('file', imageFile);\n  console.log('Image data:', formData);\n  for (let pair of formData.entries()) {\n    console.log(pair[0] + ': ' + pair[1]);\n  }\n\n  // You can now send the imageData to your backend using Axios or any other HTTP library\n  axios.post(`${baseURL}upload/`, formData )\n    .then(response => {\n      console.log('Image uploaded successfully:', response.data);\n      \n      // const imageUrl = URL.createObjectURL(blob);\n      \n      // Now you can use the imageUrl to display the image in your React component\n      // For example, you can set it as the src attribute of an <img> element\n      // document.getElementById('imageElement').src = imageUrl\n      // Optionally, handle success response\n    })\n    .catch(error => {\n      console.error('Error uploading image:', error);\n      // Optionally, handle error\n    });\n};\n\nconst handleCoin = async (event) => {\n  event.preventDefault();\n  const rectangleData = {\n    x: coordinates[0].startX,\n    y: coordinates[0].startY,\n    width: coordinates[0].w,\n    height: coordinates[0].h\n  };\n  console.log('Rectangle data:', rectangleData);\n  axios.post(`${baseURL}uploadCoin/`, rectangleData)\n    .then(response => {\n      console.log('Image uploaded successfully:', response.data);\n      const blob = new Blob([response.data], { type: 'image/jpg' });\n      const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        \n        // Use a fixed width for the canvas\n        const scaleFactor = 700 / blob.width;\n        const scaledHeight = blob.height * scaleFactor;\n        \n        // Set canvas size\n        canvas.width = 700; \n        canvas.height = scaledHeight;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(blob, 0, 0, canvas.width, scaledHeight);\n        imgRef.current = blob;\n        setImageLoaded(true); // Indicate that the image is now loaded\n    // Create a URL for the blob\n      // Optionally, handle success response\n    })\n    .catch(error => {\n      console.error('Error uploading image:', error);\n      // Optionally, handle error\n    });\n};\n\n  const handleRemoveImage = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    setImageLoaded(false);\n    setCoordinates([]);\n    setRect({});\n    setDrag(false);\n    \n    if (imageLoaderRef.current) {\n      imageLoaderRef.current.value = null;\n    }\n  }\n\n  const initDraw = (event) => {\n    if (!imageLoaded) return; \n    const x = event.nativeEvent.offsetX;\n    const y = event.nativeEvent.offsetY;\n    const canvas = canvasRef.current;\n\n    const ctx = canvas.getContext('2d');\n\n\n    if (mode === \"draw\") {\n      setRect({ startX: x, startY: y, w: 0, h: 0 });\n      setDrag(true);\n    } else if (mode === \"point\") {\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n      ctx.arc(x, y, 5, 0, Math.PI * 2, true); // Draw a circle\n      ctx.fill();\n\n      setCoordinates([...coordinates, { startX: x, startY: y, w: 0, h: 0 }]);\n    }\n  };\n\n  const draw = (event) => {\n    if (!imageLoaded || !drag || mode !== \"draw\") return;\n    const mouseX = event.nativeEvent.offsetX;\n    const mouseY = event.nativeEvent.offsetY;\n    const width = mouseX - rect.startX;\n    const height = mouseY - rect.startY;\n    setRect({ ...rect, w: width, h: height });\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'red';\n    ctx.strokeRect(rect.startX, rect.startY, width, height);\n    redraw(ctx); // Redraw the rectangles after drawing the current rectangle\n\n  };\n\n  const finishDraw = () => {\n    if (!imageLoaded || mode === \"point\") return; // Skip if in point mode\n    setDrag(false);\n    setCoordinates([...coordinates, rect]);\n  };\n\n  const redraw= (ctx) => {\n    coordinates.forEach(coord => {\n      if (coord.w === 0 && coord.h === 0) {\n        ctx.fillStyle = 'red';\n        ctx.beginPath();\n        ctx.arc(coord.startX, coord.startY, 5, 0, 2 * Math.PI);\n        ctx.fill();\n      } else {\n        ctx.strokeStyle = 'red';\n        ctx.strokeRect(coord.startX, coord.startY, coord.w, coord.h);\n      }\n  });\n};\n\n  const undoLastAction = () => {\n    setCoordinates(prevCoordinates => {\n      const newCoordinates = prevCoordinates.slice(0, -1);\n  \n      // Redraw the canvas\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n      \n      // Redraw all the elements except the last one\n      newCoordinates.forEach(coord => {\n        if (coord.w === 0 && coord.h === 0) {\n          ctx.fillStyle = 'red';\n          ctx.beginPath();\n          ctx.arc(coord.startX, coord.startY, 5, 0, Math.PI * 2);\n          ctx.fill();\n        } else {\n          ctx.strokeStyle = 'red';\n          ctx.strokeRect(coord.startX, coord.startY, coord.w, coord.h);\n        }\n      });\n  \n      return newCoordinates;\n    });\n    \n  };\n\n  const toggleMode = () => {\n    setMode(prevMode => prevMode === \"draw\" ? \"point\" : \"draw\");\n  };\n  \n\n  return (\n    <div className=\"keloid-detector-container\">\n      <h3>Mode: {mode === \"draw\" ? \"Drawing Rectangles\" : \"Selecting Points\"}</h3>\n\n      <input type=\"file\" ref={imageLoaderRef} onChange={handleImage} className=\"file-input\" />\n      <canvas ref={canvasRef} onMouseDown={initDraw} onMouseMove={draw} onMouseUp={finishDraw} className=\"image-canvas\"></canvas>\n      <div className=\"button-grid\">\n      <div className=\"column\">\n      <button onClick={handleUploadImage} className=\"remove-image-btn\">Upload Image</button>\n      <button onClick={handleCoin} className=\"remove-image-btn\">Confirm Coin</button>\n      <button onClick={handleRemoveImage} className=\"remove-image-btn\">Remove Image</button>\n      <button className=\"print-coordinates-btn\" onClick={() => alert(JSON.stringify(coordinates))}>Print Coord</button>\n      </div>\n      <div className=\"column\">\n      <button className=\"undo-rectangle-btn\" onClick={undoLastAction}>Undo</button>\n      <button onClick={toggleMode} className=\"toggle-mode-btn\">\n      \n  {mode === \"draw\" ? \"Point Mode\" : \"Draw Mode\"}\n</button>\n<button onClick={handleUploadImage} className=\"remove-image-btn\">Confrim Lesion</button>\n      <button onClick={handleUploadImage} className=\"remove-image-btn\">Print Patch</button>\n      </div>\n      </div>\n      <div className=\"coordinates-display\">Coordinates: {coordinates.map((coord, index) => (\n        <div key={index} className=\"coordinate-item\">\n          Start ({coord.startX}, {coord.startY}), End ({coord.startX + coord.w}, {coord.startY + coord.h})\n        </div>\n      ))}</div>\n    </div>\n  );\n}\n\nexport default ImageUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}