{"ast":null,"code":"var _jsxFileName = \"/Users/reed/keloid/CS-497-keloid/src/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [coordinates, setCoordinates] = useState([]);\n  const canvasRef = useRef(null);\n  const imageLoaderRef = useRef(null);\n  const imgRef = useRef(null); // Ref to store the loaded image element\n  const [rect, setRect] = useState({});\n  const [drag, setDrag] = useState(false);\n  const handleImage = e => {\n    const reader = new FileReader();\n    reader.onload = event => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        // Calculate new height to maintain aspect ratio\n        const scaleFactor = 700 / img.width;\n        const newHeight = img.height * scaleFactor;\n\n        // Set canvas size\n        canvas.width = 700;\n        canvas.height = newHeight;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        imgRef.current = img; // Store the loaded and resized image for later use\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  const initDraw = event => {\n    const startX = event.nativeEvent.offsetX;\n    const startY = event.nativeEvent.offsetY;\n    setRect({\n      startX,\n      startY,\n      w: 0,\n      h: 0\n    });\n    setDrag(true);\n  };\n  const draw = event => {\n    if (!drag) return;\n    const mouseX = event.nativeEvent.offsetX;\n    const mouseY = event.nativeEvent.offsetY;\n    const width = mouseX - rect.startX;\n    const height = mouseY - rect.startY;\n    setRect({\n      ...rect,\n      w: width,\n      h: height\n    });\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // Ensure the image is redrawn with the adjusted dimensions\n    ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'red';\n    ctx.strokeRect(rect.startX, rect.startY, width, height);\n  };\n  const finishDraw = () => {\n    setDrag(false);\n    setCoordinates([...coordinates, rect]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: imageLoaderRef,\n      onChange: handleImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: initDraw,\n      onMouseMove: draw,\n      onMouseUp: finishDraw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert(JSON.stringify(coordinates)),\n      children: \"Print Coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Coordinates: \", coordinates.map((coord, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Start (\", coord.startX, \", \", coord.startY, \"), End (\", coord.startX + coord.w, \", \", coord.startY + coord.h, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"ng+h4rsgJxnR+uyZswNug6dEFh8=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","ImageUploader","_s","coordinates","setCoordinates","canvasRef","imageLoaderRef","imgRef","rect","setRect","drag","setDrag","handleImage","e","reader","FileReader","onload","event","img","Image","canvas","current","ctx","getContext","scaleFactor","width","newHeight","height","clearRect","drawImage","src","target","result","readAsDataURL","files","initDraw","startX","nativeEvent","offsetX","startY","offsetY","w","h","draw","mouseX","mouseY","strokeStyle","strokeRect","finishDraw","children","type","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","onClick","alert","JSON","stringify","map","coord","index","_c","$RefreshReg$"],"sources":["/Users/reed/keloid/CS-497-keloid/src/ImageUploader.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nfunction ImageUploader() {\n  const [coordinates, setCoordinates] = useState([]);\n  const canvasRef = useRef(null);\n  const imageLoaderRef = useRef(null);\n  const imgRef = useRef(null); // Ref to store the loaded image element\n  const [rect, setRect] = useState({});\n  const [drag, setDrag] = useState(false);\n\n  const handleImage = (e) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        \n        // Calculate new height to maintain aspect ratio\n        const scaleFactor = 700 / img.width;\n        const newHeight = img.height * scaleFactor;\n        \n        // Set canvas size\n        canvas.width = 700;\n        canvas.height = newHeight;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        imgRef.current = img; // Store the loaded and resized image for later use\n      };\n      img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const initDraw = (event) => {\n    const startX = event.nativeEvent.offsetX;\n    const startY = event.nativeEvent.offsetY;\n    setRect({ startX, startY, w: 0, h: 0 });\n    setDrag(true);\n  };\n\n  const draw = (event) => {\n    if (!drag) return;\n    const mouseX = event.nativeEvent.offsetX;\n    const mouseY = event.nativeEvent.offsetY;\n    const width = mouseX - rect.startX;\n    const height = mouseY - rect.startY;\n    setRect({ ...rect, w: width, h: height });\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // Ensure the image is redrawn with the adjusted dimensions\n    ctx.drawImage(imgRef.current, 0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'red';\n    ctx.strokeRect(rect.startX, rect.startY, width, height);\n  };\n\n  const finishDraw = () => {\n    setDrag(false);\n    setCoordinates([...coordinates, rect]);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" ref={imageLoaderRef} onChange={handleImage} />\n      <canvas ref={canvasRef} onMouseDown={initDraw} onMouseMove={draw} onMouseUp={finishDraw}></canvas>\n      <button onClick={() => alert(JSON.stringify(coordinates))}>Print Coordinates</button>\n      <div>Coordinates: {coordinates.map((coord, index) => (\n        <div key={index}>\n          Start ({coord.startX}, {coord.startY}), End ({coord.startX + coord.w}, {coord.startY + coord.h})\n        </div>\n      ))}</div>\n    </div>\n  );\n}\n\nexport default ImageUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}